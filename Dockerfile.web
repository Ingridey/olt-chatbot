FROM python:3.12-slim-bookworm

# These directories will be mounted by ML Factory
VOLUME /mnt/input

# Define some environment variables
ENV UV_NO_CACHE=true \
    UV_NO_SYNC=true \
    DEBIAN_FRONTEND=noninteractive

# Install dependencies needed to download/install packages
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    apt-utils \
    authbind

# Install uv
COPY --from=ghcr.io/astral-sh/uv:0.5.10 /uv /uvx /bin/

# We want to run things as a non-privileged user
ENV USERNAME=user
ENV PATH="$PATH:/home/$USERNAME/.local/bin:/home/$USERNAME/app/.venv/bin"

# Add user and set up a workdir
RUN useradd -m $USERNAME -u 12345
WORKDIR /home/$USERNAME/app
RUN chown $USERNAME:$USERNAME .

# Allow unprivileged user to run listen on port 80
RUN touch /etc/authbind/byport/80
RUN chmod 500 /etc/authbind/byport/80
RUN chown $USERNAME /etc/authbind/byport/80

# Everything below here runs as a non-privileged user
USER $USERNAME


# Install runtime dependencies (will be cached)
COPY --chown=${USERNAME}:${USERNAME} pyproject.toml uv.lock ./
RUN uv sync --no-dev --no-install-project

# Define docker build arguments, and environment variables that gets populated from the
# build arguments
ARG GIT_BRANCH
ARG GIT_COMMIT
ENV GIT_BRANCH=${GIT_BRANCH} \
    GIT_COMMIT=${GIT_COMMIT}

# Copy project files to container
COPY --chown=${USERNAME}:${USERNAME} . .

# Install our own package
RUN uv sync --no-dev

# Environment variables that are Docker-specific
ENV OUTPUT_DIRECTORY=/mnt/input
ENV INPUT_DIRECTORY=/mnt/input

# Run this command
WORKDIR /home/$USERNAME/app
CMD ["authbind", "chainlit", "run", "--headless", "--host", "0.0.0.0", "--port", "80", "src/olt_chatbot/chainlit_app.py"]
